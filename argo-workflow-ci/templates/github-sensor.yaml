apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ .Release.Name }}-github-sensor
spec:
  eventBusName: {{ .Release.Name }}-default-eventbus
  template:
    serviceAccountName: {{ .Release.Name }}-operate-workflow-sa
  dependencies:
    - name: dependencies
      eventSourceName: {{ .Release.Name }}-github-eventsource
      eventName: example
      filters:
        exprLogicalOperator: "or"
        exprs:
        {{- range $repo, $repoProps := .Values.github.repositories }}
        {{- range $branch, $dockerRepo := $repoProps.branches }}
        - expr: '"push" IN type && repo == "{{ $repo }}" && branch == "refs/heads/{{ $branch }}"'
          fields:
          - name: type
            path: headers.X-Github-Event
          - name: branch
            path: body.ref 
          - name: repo
            path: body.repository.name 
        {{- end }}       
        {{- end }}       
  triggers:
    - template:
        name: github-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-webhook-ci-
              spec:
                arguments:
                  parameters:
                    - name: git_owner
                    - name: git_repo
                    - name: git_branch
                workflowTemplateRef:
                  name: {{ .Release.Name }}-build-template
                  clusterScope: true
          parameters:
          # git_owner
          - dest: spec.arguments.parameters.0.value
            src:
              dependencyName: dependencies
              dataKey: body.repository.owner.name
          # git_repo
          - dest: spec.arguments.parameters.1.value
            src:
              dependencyName: dependencies
              dataKey: body.repository.name
          # git_branch
          - dest: spec.arguments.parameters.2.value
            src:
              value: master
              dependencyName: dependencies
              dataKey: body.ref
      retryStrategy:
        steps: 3
